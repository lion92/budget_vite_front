import React, { useState, useEffect } from 'react';
import { Button, Card, Input } from './ui';
import './css/financial-glossary.css';

const FinancialGlossary = () => {
    const [searchTerm, setSearchTerm] = useState('');
    const [selectedCategory, setSelectedCategory] = useState('all');
    const [selectedTerm, setSelectedTerm] = useState(null);
    const [filteredTerms, setFilteredTerms] = useState([]);

    const categories = {
        all: { label: 'Tous les termes', icon: 'üìö', color: '#667eea' },
        budget: { label: 'Budget', icon: 'üìä', color: '#48bb78' },
        savings: { label: '√âpargne', icon: 'üí∞', color: '#ed8936' },
        investments: { label: 'Investissements', icon: 'üìà', color: '#9f7aea' },
        credit: { label: 'Cr√©dit', icon: 'üí≥', color: '#f56565' },
        insurance: { label: 'Assurance', icon: 'üõ°Ô∏è', color: '#38b2ac' },
        taxes: { label: 'Imp√¥ts', icon: 'üßæ', color: '#a0aec0' }
    };

    const glossaryTerms = [
        // Budget
        {
            term: 'Budget',
            category: 'budget',
            level: 'd√©butant',
            definition: 'Plan financier qui compare vos revenus et vos d√©penses sur une p√©riode donn√©e.',
            explanation: 'Un budget vous aide √† contr√¥ler vos finances en planifiant comment d√©penser votre argent. Il vous permet de voir o√π va votre argent et d\'identifier les postes o√π vous pourriez √©conomiser.',
            example: 'Si vous gagnez 2000‚Ç¨/mois, votre budget pourrait pr√©voir 800‚Ç¨ pour le logement, 300‚Ç¨ pour la nourriture, 200‚Ç¨ pour les transports, etc.',
            tips: [
                'Commencez par noter toutes vos d√©penses pendant un mois',
                'Utilisez la r√®gle 50/30/20 : 50% besoins, 30% envies, 20% √©pargne',
                'R√©visez votre budget chaque mois'
            ]
        },
        {
            term: 'Cashflow',
            category: 'budget',
            level: 'interm√©diaire',
            definition: 'Flux de tr√©sorerie : diff√©rence entre vos entr√©es et sorties d\'argent.',
            explanation: 'Un cashflow positif signifie que vous recevez plus d\'argent que vous n\'en d√©pensez. Un cashflow n√©gatif indique que vous d√©pensez plus que vous ne gagnez.',
            example: 'Revenus 2500‚Ç¨ - D√©penses 2200‚Ç¨ = Cashflow positif de 300‚Ç¨',
            relatedTerms: ['Budget', 'Revenus', 'D√©penses']
        },

        // √âpargne
        {
            term: 'Livret A',
            category: 'savings',
            level: 'd√©butant',
            definition: 'Compte d\'√©pargne r√©glement√© fran√ßais, sans risque et d√©fiscalis√©.',
            explanation: 'Le Livret A est le placement pr√©f√©r√© des Fran√ßais. Votre argent est disponible √† tout moment, les int√©r√™ts sont garantis par l\'√âtat et vous ne payez pas d\'imp√¥ts dessus.',
            example: 'Avec 10 000‚Ç¨ sur un Livret A √† 3%, vous gagnez 300‚Ç¨ d\'int√©r√™ts par an.',
            tips: [
                'Parfait pour votre fonds d\'urgence',
                'Plafond √† 22 950‚Ç¨ pour les particuliers',
                'Id√©al pour d√©buter dans l\'√©pargne'
            ],
            relatedTerms: ['LDDS', 'LEP', 'Fonds d\'urgence']
        },
        {
            term: 'Fonds d\'urgence',
            category: 'savings',
            level: 'd√©butant',
            definition: 'R√©serve d\'argent mise de c√¥t√© pour faire face aux impr√©vus.',
            explanation: 'C\'est votre filet de s√©curit√© financi√®re. Il vous permet de faire face aux urgences (perte d\'emploi, r√©paration voiture, probl√®me de sant√©) sans vous endetter.',
            example: 'Si vos d√©penses mensuelles sont de 2000‚Ç¨, votre fonds d\'urgence devrait √™tre entre 6000‚Ç¨ et 12000‚Ç¨.',
            tips: [
                'Commencez par √©conomiser 1000‚Ç¨',
                'Objectif : 3 √† 6 mois de d√©penses',
                'Placez-le sur un Livret A pour y acc√©der rapidement'
            ],
            relatedTerms: ['Livret A', '√âpargne', 'S√©curit√© financi√®re']
        },
        {
            term: 'Int√©r√™ts compos√©s',
            category: 'savings',
            level: 'interm√©diaire',
            definition: 'Int√©r√™ts calcul√©s sur le capital initial ET sur les int√©r√™ts pr√©c√©demment acquis.',
            explanation: 'C\'est "l\'effet boule de neige" de l\'√©pargne. Plus vous laissez votre argent plac√© longtemps, plus les int√©r√™ts s\'accumulent et g√©n√®rent eux-m√™mes des int√©r√™ts.',
            example: '1000‚Ç¨ plac√©s √† 5% pendant 10 ans : ann√©e 1 = 1050‚Ç¨, ann√©e 2 = 1102.50‚Ç¨, ann√©e 10 = 1628‚Ç¨',
            tips: [
                'Commencez √† √©pargner le plus t√¥t possible',
                'Ne touchez pas √† votre √©pargne long terme',
                'M√™me de petits montants peuvent devenir importants'
            ],
            relatedTerms: ['√âpargne', 'Rendement', 'Investissement']
        },

        // Investissements
        {
            term: 'Action',
            category: 'investments',
            level: 'interm√©diaire',
            definition: 'Part de propri√©t√© dans une entreprise cot√©e en bourse.',
            explanation: 'Quand vous achetez une action, vous devenez actionnaire de l\'entreprise. Si l\'entreprise va bien, la valeur de vos actions peut augmenter. Vous pouvez aussi recevoir des dividendes.',
            example: 'Acheter une action Apple √† 150‚Ç¨. Si elle monte √† 180‚Ç¨, vous gagnez 30‚Ç¨. Risque : elle peut aussi descendre √† 120‚Ç¨.',
            tips: [
                'Ne mettez jamais tous vos ≈ìufs dans le m√™me panier',
                'Investissez sur le long terme (5 ans minimum)',
                'Commencez par des ETF pour diversifier'
            ],
            relatedTerms: ['Bourse', 'Dividendes', 'ETF', 'Portefeuille']
        },
        {
            term: 'ETF',
            category: 'investments',
            level: 'interm√©diaire',
            definition: 'Fonds n√©goci√© en bourse qui r√©plique un indice boursier.',
            explanation: 'Un ETF vous permet d\'investir dans des centaines d\'entreprises en une seule fois. C\'est plus simple et moins risqu√© que choisir des actions individuelles.',
            example: 'Un ETF World contient des actions de 1600+ entreprises mondiales. En achetant une part, vous investissez dans toutes.',
            tips: [
                'Parfait pour d√©buter en bourse',
                'Frais g√©n√©ralement tr√®s bas',
                'Diversification automatique'
            ],
            relatedTerms: ['Action', 'Diversification', 'Indice', 'PEA']
        },
        {
            term: 'PEA',
            category: 'investments',
            level: 'interm√©diaire',
            definition: 'Plan d\'√âpargne en Actions : enveloppe fiscale fran√ßaise pour investir en bourse.',
            explanation: 'Le PEA vous permet d\'investir en actions tout en b√©n√©ficiant d\'avantages fiscaux. Apr√®s 5 ans, les plus-values ne sont soumises qu\'aux pr√©l√®vements sociaux.',
            example: 'Avec 10 000‚Ç¨ investis dans un PEA pendant 5 ans, vos gains ne seront tax√©s qu\'√† 17,2% au lieu de 30%.',
            tips: [
                'Plafond de 150 000‚Ç¨',
                'Id√©al pour investir √† long terme',
                'Ne sortez pas d\'argent avant 5 ans'
            ],
            relatedTerms: ['Action', 'ETF', 'Assurance vie', 'Fiscalit√©']
        },

        // Cr√©dit
        {
            term: 'Cr√©dit √† la consommation',
            category: 'credit',
            level: 'd√©butant',
            definition: 'Pr√™t accord√© pour financer l\'achat de biens ou services.',
            explanation: 'Ce type de cr√©dit vous permet d\'acheter imm√©diatement quelque chose que vous n\'avez pas les moyens de payer cash. Attention aux taux d\'int√©r√™t √©lev√©s !',
            example: 'Cr√©dit de 5000‚Ç¨ √† 8% sur 2 ans = remboursement de 226‚Ç¨/mois, soit 5424‚Ç¨ au total.',
            tips: [
                'Comparez les taux avant de vous engager',
                'Ne d√©passez pas 33% d\'endettement',
                '√âvitez les cr√©dits revolving'
            ],
            relatedTerms: ['TAEG', 'Surendettement', 'Mensualit√©']
        },
        {
            term: 'TAEG',
            category: 'credit',
            level: 'interm√©diaire',
            definition: 'Taux Annuel Effectif Global : co√ªt total d\'un cr√©dit exprim√© en pourcentage annuel.',
            explanation: 'Le TAEG inclut non seulement le taux d\'int√©r√™t, mais aussi tous les frais (dossier, assurance, garanties). C\'est LE taux √† comparer entre diff√©rentes offres.',
            example: 'Un cr√©dit peut afficher 5% de taux nominal, mais un TAEG de 7% avec les frais inclus.',
            tips: [
                'Toujours comparer les TAEG, pas les taux nominaux',
                'Plus le TAEG est bas, moins le cr√©dit co√ªte cher',
                'Le TAEG doit obligatoirement figurer dans les publicit√©s'
            ],
            relatedTerms: ['Cr√©dit', 'Taux d\'int√©r√™t', 'Frais de dossier']
        },
        {
            term: 'Surendettement',
            category: 'credit',
            level: 'd√©butant',
            definition: 'Situation o√π une personne ne peut plus faire face √† l\'ensemble de ses dettes.',
            explanation: 'Le surendettement survient quand vos mensualit√©s de cr√©dit d√©passent vos capacit√©s de remboursement. C\'est une spirale dangereuse √† √©viter absolument.',
            example: 'Revenus 2000‚Ç¨, mensualit√©s de cr√©dits 800‚Ç¨ = ratio de 40%, c\'est du surendettement.',
            tips: [
                'Ne jamais d√©passer 33% d\'endettement',
                '√âviter de multiplier les cr√©dits',
                'En cas de difficult√©s, contactez votre banque rapidement'
            ],
            relatedTerms: ['Cr√©dit', 'Endettement', 'Commission de surendettement']
        },

        // Assurance
        {
            term: 'Assurance vie',
            category: 'insurance',
            level: 'interm√©diaire',
            definition: 'Produit d\'√©pargne √† long terme avec avantages fiscaux.',
            explanation: 'Contrairement √† ce que son nom indique, l\'assurance vie est surtout un outil d\'√©pargne et de transmission. Elle offre une fiscalit√© avantageuse apr√®s 8 ans.',
            example: 'Apr√®s 8 ans, vous pouvez retirer jusqu\'√† 4600‚Ç¨/an (9200‚Ç¨ pour un couple) sans payer d\'imp√¥ts.',
            tips: [
                'Diversifiez entre fonds euros (s√©curis√©) et unit√©s de compte',
                'Attendez 8 ans pour optimiser la fiscalit√©',
                'Parfait pour pr√©parer sa retraite'
            ],
            relatedTerms: ['Fonds euros', 'Unit√©s de compte', 'Succession']
        },

        // Imp√¥ts
        {
            term: 'Pr√©l√®vement √† la source',
            category: 'taxes',
            level: 'd√©butant',
            definition: 'Syst√®me de collecte de l\'imp√¥t directement sur le salaire.',
            explanation: 'Depuis 2019, vos imp√¥ts sont pr√©lev√©s chaque mois sur votre salaire par votre employeur, qui les reverse au fisc.',
            example: 'Salaire brut 3000‚Ç¨ - cotisations 600‚Ç¨ - imp√¥ts 200‚Ç¨ = salaire net de 2200‚Ç¨ sur votre compte.',
            tips: [
                'V√©rifiez votre taux de pr√©l√®vement sur impots.gouv.fr',
                'Vous pouvez moduler ce taux en cours d\'ann√©e',
                'La d√©claration annuelle reste obligatoire'
            ],
            relatedTerms: ['D√©claration de revenus', 'Taux marginal', 'Cr√©dit d\'imp√¥t']
        }
    ];

    useEffect(() => {
        let filtered = glossaryTerms;

        // Filtrer par cat√©gorie
        if (selectedCategory !== 'all') {
            filtered = filtered.filter(term => term.category === selectedCategory);
        }

        // Filtrer par terme de recherche
        if (searchTerm) {
            filtered = filtered.filter(term =>
                term.term.toLowerCase().includes(searchTerm.toLowerCase()) ||
                term.definition.toLowerCase().includes(searchTerm.toLowerCase()) ||
                term.explanation.toLowerCase().includes(searchTerm.toLowerCase())
            );
        }

        setFilteredTerms(filtered);
    }, [searchTerm, selectedCategory]);

    const getLevelColor = (level) => {
        switch (level) {
            case 'd√©butant': return '#48bb78';
            case 'interm√©diaire': return '#ed8936';
            case 'avanc√©': return '#e53e3e';
            default: return '#667eea';
        }
    };

    const handleTermClick = (term) => {
        setSelectedTerm(term);
    };

    const closeModal = () => {
        setSelectedTerm(null);
    };

    return (
        <div className="financial-glossary">
            <div className="glossary-header">
                <h1>üìö Glossaire Financier</h1>
                <p>Comprenez le vocabulaire de la finance personnelle</p>
            </div>

            <div className="glossary-controls">
                <div className="search-section">
                    <Input
                        type="text"
                        placeholder="üîç Rechercher un terme..."
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                        className="search-input"
                    />
                </div>

                <div className="categories-section">
                    <h3>Cat√©gories</h3>
                    <div className="categories-grid">
                        {Object.entries(categories).map(([key, category]) => (
                            <button
                                key={key}
                                className={`category-button ${selectedCategory === key ? 'active' : ''}`}
                                onClick={() => setSelectedCategory(key)}
                                style={{
                                    '--category-color': category.color
                                }}
                            >
                                <span className="category-icon">{category.icon}</span>
                                <span className="category-label">{category.label}</span>
                                <span className="category-count">
                                    ({key === 'all' ? glossaryTerms.length : glossaryTerms.filter(t => t.category === key).length})
                                </span>
                            </button>
                        ))}
                    </div>
                </div>
            </div>

            <div className="glossary-content">
                <div className="terms-header">
                    <h2>
                        {selectedCategory === 'all' ? 'Tous les termes' : categories[selectedCategory]?.label}
                        <span className="terms-count">({filteredTerms.length} terme{filteredTerms.length > 1 ? 's' : ''})</span>
                    </h2>
                </div>

                <div className="terms-grid">
                    {filteredTerms.map((term, index) => (
                        <TermCard
                            key={index}
                            term={term}
                            onClick={() => handleTermClick(term)}
                            levelColor={getLevelColor(term.level)}
                        />
                    ))}
                </div>

                {filteredTerms.length === 0 && (
                    <div className="no-results">
                        <div className="no-results-icon">üòî</div>
                        <h3>Aucun terme trouv√©</h3>
                        <p>
                            {searchTerm
                                ? `Aucun r√©sultat pour "${searchTerm}"`
                                : 'Aucun terme dans cette cat√©gorie'
                            }
                        </p>
                        {searchTerm && (
                            <Button
                                variant="secondary"
                                onClick={() => setSearchTerm('')}
                            >
                                Effacer la recherche
                            </Button>
                        )}
                    </div>
                )}
            </div>

            {selectedTerm && (
                <TermModal term={selectedTerm} onClose={closeModal} levelColor={getLevelColor(selectedTerm.level)} />
            )}
        </div>
    );
};

const TermCard = ({ term, onClick, levelColor }) => (
    <Card className="term-card" onClick={onClick}>
        <div className="term-header">
            <h3>{term.term}</h3>
            <span
                className="level-badge"
                style={{ backgroundColor: levelColor }}
            >
                {term.level}
            </span>
        </div>
        <p className="term-definition">{term.definition}</p>
        <div className="term-footer">
            <span className="term-category">
                üìÅ {term.category.charAt(0).toUpperCase() + term.category.slice(1)}
            </span>
            <span className="read-more">En savoir plus ‚Üí</span>
        </div>
    </Card>
);

const TermModal = ({ term, onClose, levelColor }) => (
    <div className="term-modal-overlay" onClick={onClose}>
        <div className="term-modal" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
                <div className="modal-title">
                    <h2>{term.term}</h2>
                    <span
                        className="level-badge"
                        style={{ backgroundColor: levelColor }}
                    >
                        {term.level}
                    </span>
                </div>
                <button className="close-button" onClick={onClose}>‚úï</button>
            </div>

            <div className="modal-content">
                <div className="definition-section">
                    <h3>üìù D√©finition</h3>
                    <p>{term.definition}</p>
                </div>

                <div className="explanation-section">
                    <h3>üí° Explication d√©taill√©e</h3>
                    <p>{term.explanation}</p>
                </div>

                {term.example && (
                    <div className="example-section">
                        <h3>üìã Exemple concret</h3>
                        <div className="example-box">
                            <p>{term.example}</p>
                        </div>
                    </div>
                )}

                {term.tips && term.tips.length > 0 && (
                    <div className="tips-section">
                        <h3>üí° Conseils pratiques</h3>
                        <ul className="tips-list">
                            {term.tips.map((tip, index) => (
                                <li key={index}>{tip}</li>
                            ))}
                        </ul>
                    </div>
                )}

                {term.relatedTerms && term.relatedTerms.length > 0 && (
                    <div className="related-section">
                        <h3>üîó Termes associ√©s</h3>
                        <div className="related-terms">
                            {term.relatedTerms.map((relatedTerm, index) => (
                                <span key={index} className="related-term">
                                    {relatedTerm}
                                </span>
                            ))}
                        </div>
                    </div>
                )}
            </div>

            <div className="modal-footer">
                <Button variant="primary" onClick={onClose}>
                    J'ai compris !
                </Button>
            </div>
        </div>
    </div>
);

export default FinancialGlossary;